@model UserViewModel
<style>
    * {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
        font-family: "Poppins", sans-serif;
    }

    :root {
        --primary-color: #c6c3c3;
        --second-color: #ffffff;
        --black-color: #000000;
    }

    a {
        text-decoration: none;
        color: var(--second-color);
    }

    .wrapper {
        width: 100%;
        display: flex;
        justify-content: center;
        align-items: center;
        min-height: 100vh;
    }

    .login_box {
        position: relative;
        width: 450px;
        backdrop-filter: blur(25px);
        border: 2px solid var(--primary-color);
        border-radius: 15px;
        padding: 7.5em 2.5em 4em 2.5em;
        color: var(--second-color);
        box-shadow: 0px 0px 10px 2px rgba(0, 0, 0, 0.2);
    }

    .login-header {
        position: absolute;
        top: 0;
        left: 50%;
        transform: translateX(-50%);
        display: flex;
        align-items: center;
        justify-content: center;
        background-color: var(--primary-color);
        width: 140px;
        height: 70px;
        border-radius: 0 0 20px 20px;
    }

        .login-header span {
            font-size: 30px;
            color: var(--black-color);
        }

        .login-header::before {
            content: "";
            position: absolute;
            top: 0;
            left: -30px;
            width: 30px;
            height: 30px;
            border-top-right-radius: 50%;
            background: transparent;
            box-shadow: 15px 0 0 0 var(--primary-color);
        }

        .login-header::after {
            content: "";
            position: absolute;
            top: 0;
            right: -30px;
            width: 30px;
            height: 30px;
            border-top-left-radius: 50%;
            background: transparent;
            box-shadow: -15px 0 0 0 var(--primary-color);
        }

    .input_box {
        position: relative;
        display: flex;
        flex-direction: column;
        margin: 20px 0;
    }

    .input-field {
        width: 100%;
        height: 55px;
        font-size: 16px;
        background: transparent;
        color: var(--second-color);
        padding: 0 20px;
        border: 2px solid var(--primary-color);
        border-radius: 30px;
        outline: none;
    }

    .label {
        margin-bottom: 8px;
        font-size: 16px;
        color: var(--second-color);
    }

    .input-submit {
        width: 100%;
        height: 50px;
        background: #ececec;
        font-size: 16px;
        font-weight: 500;
        border: none;
        border-radius: 30px;
        cursor: pointer;
        transition: 0.3s;
    }

        .input-submit:hover {
            background: var(--second-color);
        }

    .register {
        text-align: center;
    }

</style>
<div class="wrapper">
    <div class="login_box">
        <div class="login-header">
            <span>Kayıt Ol</span>
        </div>

        <form id="registerForm" asp-action="Register" method="post" enctype="multipart/form-data">
            <div class="input_box">
                <label for="email" class="label">E-Posta</label>
                <input type="text" id="email" name="Email" class="input-field" required>
                <i class="bx bx-envelope icon"></i>
            </div>

            <div class="input_box">
                <label for="password" class="label">Şifre</label>
                <input type="password" id="password" class="input-field" required>
                <i class="bx bx-lock-alt icon"></i>
            </div>

            <div class="input_box">
                <label for="name" class="label">Ad</label>
                <input type="text" id="name" name="Name" class="input-field" required>
                <i class="bx bx-user icon"></i>
            </div>

            <div class="input_box">
                <label for="surname" class="label">Soyad</label>
                <input type="text" id="surname" name="Surname" class="input-field" required>
                <i class="bx bx-user icon"></i>
            </div>

            <div class="input_box">
                <label for="birthdate" class="label">Doğum Tarihi</label>
                <input type="date" id="birthdate" name="Birthdate" class="input-field" required>
                <i class="bx bx-calendar icon"></i>
            </div>

            <div class="input_box">
                <label for="PhotoUrl" class="label">Resim Ekle</label>
                <input asp-for="PhotoUrl" type="file" class="form-control" id="PhotoUrl" />
                <i class="bx bx-image icon"></i>
            </div>

            <div class="input_box">
                <input type="hidden" id="hashedPassword" name="Password">
                <input type="submit" class="input-submit" value="Kayıt Ol">
            </div>
        </form>
    </div>
</div>

<script>
    // SHA-256 Hash fonksiyonu
    async function sha256(message) {
        const msgBuffer = new TextEncoder().encode(message);
        const hashBuffer = await crypto.subtle.digest('SHA-256', msgBuffer);
        const hashArray = Array.from(new Uint8Array(hashBuffer));
        const hashHex = hashArray.map(b => b.toString(16).padStart(2, '0')).join('');
        return hashHex;
    }

    // Doğum tarihini kontrol et
    function checkAge(birthdate) {
        const today = new Date();
        const birthDate = new Date(birthdate);
        let age = today.getFullYear() - birthDate.getFullYear();
        const m = today.getMonth() - birthDate.getMonth();
        if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {
            age--;
        }
        return age >= 15;
    }

    // Şifre kurallarını kontrol et
    function checkPasswordRules(password) {
        const passwordRules = /^(?=.*\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[!%*?&])[A-Za-z\d[!%*?&]{8,}$/;
        return passwordRules.test(password);
    }

    // Formun gönderilmesi sırasında şifreyi hashle ve kuralları kontrol et
    document.getElementById('registerForm').addEventListener('submit', async function(event) {
        event.preventDefault();  // Formun otomatik gönderilmesini engelle
        const passwordField = document.getElementById('password');
        const hashedPasswordField = document.getElementById('hashedPassword');
        const birthdateField = document.getElementById('birthdate');

        // Şifre kurallarını kontrol et
        if (!checkPasswordRules(passwordField.value)) {
            alert("Şifre en az 8 karakter olmalı, en az bir büyük harf, bir küçük harf, bir sayı ve bir özel karakter içermelidir.");
            return;
        }

        // Yaş kontrolü yap
        if (!checkAge(birthdateField.value)) {
            alert("Kayıt olabilmek için en az 15 yaşında olmalısınız.");
            return;
        }

        // Şifreyi hashle
        const hashedPassword = await sha256(passwordField.value);

        // Hashlenmiş şifreyi gizli alana aktar
        hashedPasswordField.value = hashedPassword;

        // Orijinal şifre alanını boşalt (isteğe bağlı)
        passwordField.value = '';

        // Formu gönder
        this.submit();
    });
</script>
